#include<stdio.h>
#include<windows.h>
 
static int int_cmp(void *x, void *y)
{
	return *((int *)x) > *((int *)y);
}
 
static void swap(void *x, void *y, int size)
{
	char *p = (char*)x;
	char *q = (char*)y;
	while (size--)
	{
		*q ^= *p;
		*p ^= *q;
		*q ^= *p;
		p++;
		q++;
	}
}
 
void mySort(void *arr, int count, int size, int(*cmp)(void *, void*))
{
	int i = 0;
	int j = 0;
	int flag = 0;
	for (; i<count - 1; i++)
	{
		flag = 0;
		for (j = 0; j<count - 1 - i; j++)
		{
			if (cmp((char*)arr + j*size, (char*)arr + (j + 1)*size) > 0)
			{
				flag = 1;
				swap((char*)arr + j*size, (char*)arr + (j + 1)*size, size);
			}
		}
		if (flag == 0)
		{
			return 0;
		}
	}
}
 
int main()
{
	int i = 0;
	int arr[] = { 3, 21, 4, 21, 23, 1, 125, 1, 0,3 };
	int size = sizeof(arr) / sizeof(arr[0]);
	mySort(arr, size, sizeof(int), int_cmp);
	for (; i <size; i++)
	{
		printf("%d  ", arr[i]);
	}
	printf("\n");
	system("pause");
	return 0;
}

